{"version":3,"sources":["../management.js"],"names":["akeeba_passwordless_create_credentials","publicKey","post_url","interface_selector","navigator","alert","Joomla","JText","_","console","log","arrayToBase64String","a","btoa","String","fromCharCode","challenge","Uint8Array","from","window","atob","c","charCodeAt","user","id","excludeCredentials","map","data","credentials","create","then","publicKeyCredential","type","rawId","response","clientDataJSON","attestationObject","postBackData","JSON","stringify","jQuery","post","done","responseHTML","elements","document","querySelectorAll","elContainer","outerHTML","fail","akeeba_passwordless_handle_creation_error","status","statusText","error","message"],"mappings":"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","sourcesContent":["/**\n * @package   AkeebaPasswordlessLogin\n * @copyright Copyright (c)2018-2019 Nicholas K. Dionysopoulos / Akeeba Ltd\n * @license   GNU General Public License version 3, or later\n */\n\n/**\n * Ask the user to link an authenticator using the provided public key (created server-side). Posts the credentials to\n * the URL defined in post_url using AJAX. That URL must re-render the management interface. These contents will replace\n * the element identified by the interface_selector CSS selector.\n *\n * @param   {object}  publicKey\n * @param   {String}  post_url\n * @param   {String}  interface_selector\n */\nfunction akeeba_passwordless_create_credentials(publicKey, post_url, interface_selector)\n{\n    // Make sure the browser supports Webauthn\n    if (!('credentials' in navigator)) {\n        alert(Joomla.JText._('PLG_SYSTEM_WEBAUTHN_ERR_NO_BROWSER_SUPPORT'))\n\n        console.log(\"This browser does not support Webauthn\");\n        return;\n    }\n\n    // Utility function to convert array data to base64 strings\n    function arrayToBase64String(a)\n    {\n        return btoa(String.fromCharCode(...a));\n    }\n\n    // Convert the public key infomration to a format usable by the browser's credentials managemer\n    publicKey.challenge = Uint8Array.from(window.atob(publicKey.challenge), c => c.charCodeAt(0));\n    publicKey.user.id   = Uint8Array.from(window.atob(publicKey.user.id), c => c.charCodeAt(0));\n\n    if (publicKey.excludeCredentials)\n    {\n        publicKey.excludeCredentials = publicKey.excludeCredentials.map(function (data) {\n            return {\n                ...data,\n                \"id\": Uint8Array.from(window.atob(data.id), c => c.charCodeAt(0))\n            };\n        });\n    }\n\n    // Ask the browser to prompt the user for their authenticator\n    navigator.credentials.create({publicKey})\n        .then(function (data) {\n            let publicKeyCredential = {\n                id:       data.id,\n                type:     data.type,\n                rawId:    arrayToBase64String(new Uint8Array(data.rawId)),\n                response: {\n                    clientDataJSON:    arrayToBase64String(new Uint8Array(data.response.clientDataJSON)),\n                    attestationObject: arrayToBase64String(new Uint8Array(data.response.attestationObject))\n                }\n            };\n\n            let postBackData = {\n                \"option\":   \"com_ajax\",\n                \"group\":    \"system\",\n                \"plugin\":   \"webauthn\",\n                \"format\":   \"raw\",\n                \"akaction\": \"create\",\n                \"encoding\": \"raw\",\n                \"data\":     btoa(JSON.stringify(publicKeyCredential))\n            };\n\n            window.jQuery.post(post_url, postBackData)\n                .done(function (responseHTML) {\n                    let elements = document.querySelectorAll(interface_selector);\n\n                    if (!elements)\n                    {\n                        return;\n                    }\n\n                    let elContainer = elements[0];\n\n                    elContainer.outerHTML = responseHTML;\n                })\n                .fail(function (data) {\n                    akeeba_passwordless_handle_creation_error(data.status + ' ' + data.statusText);\n                });\n\n\n        }, function (error) {\n            // An error occurred: timeout, request to provide the authenticator refused, hardware / software error...\n            akeeba_passwordless_handle_creation_error(error);\n        });\n}\n\n/**\n * A simple error handler\n *\n * @param   {String}  message\n */\nfunction akeeba_passwordless_handle_creation_error(message)\n{\n    alert(message);\n\n    console.log(message);\n}"],"file":"management.js"}